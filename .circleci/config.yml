version: 2
jobs: 
  build:
    branches: #SET the only branches that are allowed for build
      only:
        - development
    docker:
      - image: node:6.11.2 #primary container
        environment: 
          VT_REDIS_HOST: 127.0.0.1
          VT_REDIS_PORT: 6379
          VT_DB_HOST: 127.0.0.1
          VT_DB_USERNAME: docker
          VT_DB_PASSWORD: password
          VT_DB_NAME: studylane
          VT_DB_PORT: 3306
      - image: redis:3.2.4 #add redis image
      - image: mysql:5.6.27 #add mysql docker image
        environment: 
          MYSQL_USER: docker
          MYSQL_DATABASE: studylane
          MYSQL_PASSWORD: password          
          MYSQL_ROOT_PASSWORD: password
    steps:
      - checkout
      
      # Install & Cache  
      # Global  
      - restore_cache: 
          keys: 
            - global-cache-1-{{ checksum ".circleci/config.yml" }}
            - global-cache-1        
      - run: 
          name: Add application dependencies
          command: |
            npm install -g bower
            npm install -g pm2

            #Dependencies for AWS Code Deploy
            apt-get -y update
            apt-get -y install python-pip python-dev build-essential 
            apt-get -y install jq 
            pip install --upgrade pip
            pip install --upgrade virtualenv
            pip install awscli --upgrade            
      - save_cache: 
          key: global-cache-1-{{ checksum ".circleci/config.yml" }}
          paths: 
            - /usr/local/lib/node_modules
            - /usr/local/bin

      # Install & Cache             
      # NPM vendors
      - restore_cache: 
          keys: 
            - npm-cache-1-{{ checksum "package.json" }}
            - npm-cache-1       
      - run: 
          name: Install Node
          command: |
            npm install     
      - save_cache: 
          key: npm-cache-1-{{ checksum "package.json" }}
          paths: 
            - node_modules

      # Install & Cache 
      # bower vendors            
      - restore_cache: 
          keys: 
            - bower-cache-1-{{ checksum "bower.json" }}
            - bower-cache         
      - run: 
          name: Install Bower
          command: |
            bower install    
      - save_cache: 
          key: bower-cache-1-{{ checksum "bower.json" }}
          paths: 
            - public/bower_components
      - run: 
          name: Do Unit Test
          command: | 
            npm test && 
            rm test-results.xml
      - run:
          name: Test Deploy to PM2
          command: npm run pm2_start
      - run:
          name: Update Build Date
          command: | 
            BUILD_DATE="$(date +'%Y-%m-%d')"
            sed -i "s/auto_set_via_system.build_date/$BUILD_DATE/g" config/default.json 
      - run: 
          name: Add Environment Variables for Code Deploy
          command: |
            #get build from json via jq
            BUILD_VERSION="$(jq '.version' config/default.json)"
            BUILD_DATE="$(jq '.build_date' config/default.json)"
            echo "export CODE_DEPLOY_FILENAME="$BUILD_VERSION/$BUILD_DATE/$(date +'%Y-%m-%d-%H:%M:%S')/packaged_application.zip"" >> $BASH_ENV
      - run: 
          name: Code Deploy - Package Application
          command: |
            echo "CODE_DEPLOY Filename $CODE_DEPLOY_FILENAME"
            aws deploy push \
              --application-name $AWS_CODE_DEPLOY_APPLICATION_NAME \
              --s3-location s3://$AWS_CODE_DEPLOY_S3_BUCKET/$CODE_DEPLOY_FILENAME \
              --ignore-hidden-files
      # - run: 
      #     name: Code Deploy - Deploy Application
      #     command: |
            # echo "CODE_DEPLOY Filename $CODE_DEPLOY_FILENAME"
            # aws deploy create-deployment \
            #   --ignore-application-stop-failures \
            #   --application-name $AWS_CODE_DEPLOY_APPLICATION_NAME \
            #   --deployment-config-name CodeDeployDefault.OneAtATime \
            #   --deployment-group-name $AWS_CODE_DEPLOY_DEPLOYMENT_GROUP_NAME \
            #   --s3-location bucket=$AWS_CODE_DEPLOY_S3_BUCKET,bundleType=zip,key=$CODE_DEPLOY_FILENAME          